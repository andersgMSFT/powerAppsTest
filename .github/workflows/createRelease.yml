name: Create release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Tag of this release (needs to be semantic version string https://semver.org, ex. 1.0.0)
        required: true
        default: "1.1.2"
      environment:
        description: Environment
        required: true
        default: "QA"
      solutionName:
        description: Name of the Power Platform solution
        required: true
        default: "BcSampleAppsSolution"
      draft:
        description: Create as deaft.
        required: true
        type: boolean
        default: true

jobs:
  package-and-deploy: 
    environment: ${{github.event.inputs.environment}}
    runs-on: ubuntu-latest    
    steps:
    - name: Check out code
      uses: actions/checkout@v3
        
    - name: Update solution version
      shell: pwsh
      run: |
        script/updateSolutionVersion.ps1 -solutionPath ${{ github.event.inputs.solutionName }}/Other/Solution.xml -version ${{ github.event.inputs.version }}

    - name: Pack Solution
      uses: microsoft/powerplatform-actions/pack-solution@v0
      with:
        solution-file: 'output/${{ github.event.inputs.solutionName }}.zip'
        solution-folder: ${{ github.event.inputs.solutionName }}
        solution-type: 'Unmanaged'
        process-canvas-apps: true

    - name: Who am I 
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        user-name: ${{ secrets.PowerUser }}
        password-secret: ${{ secrets.PowerPassword }}
        environment-url: ${{ secrets.PowerEnv }}        
          
    - name: Publish solution to Power Platform
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        user-name: ${{ secrets.PowerUser }}
        password-secret: ${{ secrets.PowerPassword }}
        environment-url: ${{ secrets.PowerEnv }}
        solution-file: output/${{ github.event.inputs.solutionName }}.zip
        force-overwrite: true
        publish-changes: true
  
  download-managed-and-unmanaged: 
    environment: ${{github.event.inputs.environment}}
    runs-on: ubuntu-latest
    needs: [package-and-deploy]   
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        user-name: ${{ secrets.PowerUser }}
        password-secret: ${{ secrets.PowerPassword }}
        environment-url: ${{ secrets.PowerEnv }}

    - name: export-solution (unmanged)
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        user-name: ${{ secrets.PowerUser }}
        password-secret: ${{ secrets.PowerPassword }}
        environment-url: ${{ secrets.PowerEnv }}
        solution-name: ${{ github.event.inputs.solutionName }}
        solution-output-file: output/${{ github.event.inputs.solutionName }}.zip

    - name: export-solution (managed)
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        user-name: ${{ secrets.PowerUser }}
        password-secret: ${{ secrets.PowerPassword }}
        environment-url: ${{ secrets.PowerEnv }}
        solution-name: ${{ github.event.inputs.solutionName }}
        solution-output-file: output/${{ github.event.inputs.solutionName }}_managed.zip
    
    - name: Upload unmanaged solution as artifact store
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.inputs.version }} - ${{ github.event.inputs.solutionName }}(${{ github.event.inputs.environment }})
        path: output

  create-release:
    environment: ${{github.event.inputs.environment}}
    runs-on: ubuntu-latest
    needs: [download-managed-and-unmanaged]    
    steps:
      - uses: actions/download-artifact@master
        with:
          name: ${{ github.event.inputs.version }} - ${{ github.event.inputs.solutionName }}(${{ github.event.inputs.environment }})
          path: output

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: ${{ github.event.inputs.version }} - ${{ github.event.inputs.solutionName }}(${{ github.event.inputs.environment }})
          draft: ${{ github.event.inputs.draft }}
          prerelease: false

      - name: Upload managed solution
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: output/${{ github.event.inputs.solutionName }}_managed.zip
          asset_name: ${{ github.event.inputs.solutionName }}_managed.zip
          asset_content_type: application/zip

      - name: Upload unmanaged solution
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: output/${{ github.event.inputs.solutionName }}.zip
          asset_name: ${{ github.event.inputs.solutionName }}.zip
          asset_content_type: application/zip

