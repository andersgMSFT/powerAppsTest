name: Get latest solution changes

on:
  workflow_dispatch:
    inputs:
      environment:
        type: text
        description: The environment to get latest changes from
        default: QA
      solutionName:
        type: text
        description: The name of the solution
        default: BcSampleAppsSolution
      useDev:
        type: boolean 
        description: Search for the dev version of the solution
        default: true

jobs:
  get-changes:
    runs-on: ubuntu-latest
    environment: ${{github.event.inputs.environment}}   
    env:
      solutionUniqueName: ${{github.event.inputs.solutionName}}  
    steps: 
      - name: Check if main branch 
        if: ${{github.ref_name == 'main'}}
        run: echo "Please create a new branch to avoid direct commits to main. Current branch -->" + ${{github.ref_name}};  exit 2;
        
      - name: Assign unique solution name
        if: ${{github.event.inputs.useDev}}
        run: echo "solutionUniqueName=${{github.event.inputs.solutionName}}_dev" >> $GITHUB_ENV 
        
      - name: Show unique solution name
        run: echo $solutionUniqueName
      
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: who-am-i action
        uses: microsoft/powerplatform-actions/who-am-i@v0
        with:
          user-name: ${{secrets.PowerUser}}
          password-secret: ${{secrets.PowerPassword}}
          environment-url: ${{secrets.PowerEnv}}

      - name: export-solution action
        uses: microsoft/powerplatform-actions/export-solution@v0
        with:
          user-name: ${{secrets.PowerUser}}
          password-secret: ${{secrets.PowerPassword}}
          environment-url: ${{secrets.PowerEnv}}
          solution-name: ${{env.solutionUniqueName}} #This is using the unique name so we can specify if dev or normal version
          solution-output-file: ${{github.event.inputs.solutionName}}.zip

      - name: unpack-solution action
        uses: microsoft/powerplatform-actions/unpack-solution@v0
        with:
          solution-file: ${{github.event.inputs.solutionName}}.zip
          solution-folder: ${{github.event.inputs.solutionName}}
          solution-type: 'Unmanaged'
          overwrite-files: true
          process-canvas-apps: true   
      
      - name: Remove zip file
        run: rm ${{github.event.inputs.solutionName}}.zip  

      - name: Remove dev tag from solution file
        shell: pwsh
        run: |
          .github/actions/script/updateSolutionFile.ps1 -solutionPath ${{github.event.inputs.solutionName}}/Other/Solution.xml

      - name: Commit changes (if there are any) 
        shell: pwsh
        run: .github/actions/script/commitGitChanges.ps1 -solutionName ${{github.event.inputs.solutionName}} -environmentName ${{github.event.inputs.environment}}
